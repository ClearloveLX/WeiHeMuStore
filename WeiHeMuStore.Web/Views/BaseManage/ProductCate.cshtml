@{
    ViewData["Title"] = "菜品类别";
}

<div class="panel-body" style="padding-bottom:0px;">
    <div class="panel panel-default">
        <div class="panel-heading">查询条件</div>
        <div class="panel-body">
            <form id="formSearch" class="form-horizontal">
                <div class="form-group" style="margin-top:15px">
                    <label class="control-label col-sm-1" for="txt_search_name">关键字</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txt_search_name">
                    </div>
                    <div class="col-sm-4" style="text-align:left;">
                        <button type="button" id="btn_query" class="btn btn-primary">查询</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
    <div id="toolbar" class="btn-group">
        <button id="btn_add" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_edit" type="button" class="btn btn-default hide">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
        </button>
        <button id="btn_delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
    </div>
    <table id="table_productCate"></table>
</div>

@section Scripts{
    <script type="text/javascript">
        $(function () {
            var _table = new TableInit();
            _table.Init();

            var _button = new ButtonInit();
            _button.Init();
        });

        var TableInit = function () {
            var _tableInit = Object();
            _tableInit.Init = function () {
                $("#table_productCate").bootstrapTable({
                    url: '/BaseManage/ProductCateData',               //请求后台的URL（*）
                    method: 'get',                      //请求方式（*）
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: false,                     //是否启用排序
                    sortOrder: "asc",                   //排序方式
                    queryParams: _tableInit.queryParams,//传递参数（*）
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                      //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],        //可供选择的每页的行数（*）
                    search: false,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: false,
                    showColumns: true,                  //是否显示所有的列
                    showRefresh: true,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    idField: "productCateId",                     //每一行的唯一标识，一般为主键列
                    showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                  //是否显示父子表
                    singleSelect: true,
                    columns: [{
                        checkbox: true
                    }, {
                        field: 'productCateId',
                        title: '菜品类别编号',

                    }, {
                        field: 'productCateName',
                        title: '菜品类别',
                        editable: {
                            type: 'text',
                            validate: function (value) {
                                if ($.trim(value) == '') {
                                    return '菜品类别不能为空!';
                                }
                            }
                        }
                    },],
                    onEditableSave: function (field, row, oldValue, $el) {
                        $.ajax({
                            type: "post",
                            url: "/BaseManage/ProductCateEdit",
                            data: row,
                            dataType: 'JSON',
                            success: function () {
                                layer.msg('修改成功！', { time: 1000 });
                                $("#table_productCate").bootstrapTable('refresh');
                            },
                            error: function () {
                                layer.msg('修改失败！请确认原因。', { time: 2000 });
                                $("#table_productCate").bootstrapTable('refresh');
                            },
                            complete: function () {

                            }
                        });
                    }
                });
            };
            //得到查询的参数
            _tableInit.queryParams = function (params) {
                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    limit: params.limit,   //页面大小
                    offset: params.offset,  //页码
                    name: $("#txt_search_name").val()
                };
                return temp;
            };
            return _tableInit;
        };

        var ButtonInit = function () {
            var _buttonInit = new Object();
            _buttonInit.Init = function () {
                $("#btn_delete").click(function () {
                    var selectContent = $('#table_productCate').bootstrapTable('getSelections')[0];
                    if (typeof (selectContent) == 'undefined') {
                        layer.msg('请选择一列数据!', { time: 1000 });
                        return false;
                    } else {
                        //alert(selectContent.productCateId);
                        layer.confirm('确认删除此数据？', {
                            btn: ['确认', '取消'] //按钮
                        }, function () {
                            $.ajax({
                                type: "post",
                                url: "/BaseManage/ProductCateRemove",
                                data: { id: selectContent.productCateId },
                                dataType: 'JSON',
                                success: function () {
                                    layer.msg('删除成功！', { time: 1000 });
                                    $("#table_productCate").bootstrapTable('refresh');
                                },
                                error: function () {
                                    layer.msg('删除失败！请确认原因。', { time: 2000 });
                                },
                                complete: function () {

                                }
                            });
                        });
                        //$('#item_project_modal').modal('show');     // 项目立项面板
                    }
                });
                $("#btn_add").click(function () {
                    openiframe('新增菜品类别', '900', '400', '/BaseManage/ProductCateAdd')
                });
                $("#btn_query").click(function () {
                    $("#table_productCate").bootstrapTable('refresh');
                })
            }
            return _buttonInit;
        }
    </script>
}